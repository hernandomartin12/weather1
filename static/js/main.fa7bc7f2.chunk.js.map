{"version":3,"sources":["components/UserLocation.js","components/Navbar.js","App.js","components/Pollution.js","reportWebVitals.js","index.js"],"names":["UserLocation","props","console","log","weather","temperature","description","location","region","country","wind_speed","pressure","precip","humidity","img","deafult","className","name","sys","main","temp","isFah","src","alt","Navbar","onSubmit","e","changeLocation","type","placeholder","onChange","changeRegion","target","value","App","state","userPosition","latitude","longitude","regionInput","convertTemp","currentTemp","fahrenheit","Math","round","celcius","setState","preventDefault","Axios","get","then","res","userWeather","data","current","weather_descriptions","weather_icons","navigator","geolocation","getCurrentPosition","position","coords","this","Button","variant","onClick","to","style","color","React","Component","Pollution","useState","pollutionData","setPollutionData","loading","setLoading","setLocation","setAqiColor","aqi","loadPollutionData","a","axios","weatherRes","list","pm2_5","components","pm10","aqiColor","useEffect","handleSubmit","coord","lat","lon","height","paddingTop","class","textAlign","background","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.fa7bc7f2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function UserLocation(props) {\n  console.log(props);\n  const {\n    temperature,\n    description,\n    location,\n    region,\n    country,\n    wind_speed,\n    pressure,\n    precip,\n    humidity,\n    img,\n  } = props.weather;\n  const { weather } = props;\n  console.log(weather);\n  console.log(props.deafult);\n  return (\n    <div className=\"keluarga\">\n      {props.deafult ? (\n        <div className=\"deafult\">\n          <div className=\"col-md-3 weather-tempdeafult\">\n            <h1>\n              {props.deafult && weather.name},\n              {props.deafult && weather.sys.country}\n            </h1>\n            <h1>\n              {props.deafult && weather.main.temp}\n              <sup>o</sup>\n              {props.isFah ? \"F\" : \"C\"}\n            </h1>\n            <h2>{props.deafult && weather.weather[0].main}</h2>\n          </div>\n        </div>\n      ) : (\n        <div className=\"user-weather\">\n          <div className=\"row\">\n            <div className=\"col-md-3 weather-temp\">\n              <h1>\n                {temperature}\n                <sup>o</sup> {props.isFah ? \"F\" : \"C\"} , {description}\n              </h1>\n              <h4>{location}</h4>\n              <p>\n                {region} , {country}\n              </p>\n            </div>\n\n            <div className=\"col-md-9\">\n              <img className=\"mainImg\" src={img} alt=\"weather-img\" />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-3 weather-info\">\n              <p>\n                <b>Wind Speed</b>(km/hr)\n              </p>\n              <h2>{wind_speed}</h2>\n            </div>\n\n            <div className=\"col-md-3 weather-info\">\n              <p>\n                <b>Preassure</b>(millibar)\n              </p>\n              <h2>{pressure}</h2>\n            </div>\n\n            <div className=\"col-md-3 weather-info\">\n              <p>\n                <b>Precipitation</b>(mm)\n              </p>\n              <h2>{precip}</h2>\n            </div>\n\n            <div className=\"col-md-3 weather-info\">\n              <p>\n                <b>Humidity</b>(%)\n              </p>\n              <h2>{humidity}</h2>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function Navbar(props) {\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n                <h1 className=\"title\">Weather App</h1>\n            </div>\n\n            <div className=\"col-md-6\">\n                <form className=\"region\" onSubmit={(e) => { props.changeLocation(e) }}>\n                    <input type=\"text\" className=\"regioninput\" placeholder=\"Select your region\" onChange={(e) => { props.changeRegion(e.target.value) }} />\n                </form>\n            </div>\n\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport UserLocation from \"./components/UserLocation.js\";\nimport Navbar from \"./components/Navbar.js\";\nimport \"./App.css\";\nimport \"./index.css\";\n\nimport Axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nclass App extends React.Component {\n  //state\n  state = {\n    deafult: true,\n    isFah: false,\n    userPosition: {\n      latitude: 35,\n      longitude: 139,\n    },\n    weather: null,\n    regionInput: \"\",\n  };\n\n  componentDidMount() {\n    //check whether geolocation is supported\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        //get the lat and long of your device\n\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n\n        //Weather Api call\n        Axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=b9dfff4772ea4035c45e4bbc1da13479`\n        ).then((res) => {\n          console.log(res);\n          res.data.main.temp = Math.round(res.data.main.temp - 273);\n          this.setState({ ...this.state, weather: res.data, deafult: true });\n        });\n      });\n    }\n  }\n  convertTemp = () => {\n    const currentTemp = this.state.deafult\n      ? this.state.weather.main.temp\n      : this.state.weather.temperature;\n\n    const fahrenheit = Math.round((currentTemp * 9) / 5 + 32);\n\n    const celcius = Math.round(((currentTemp - 32) * 5) / 9);\n\n    if (!this.state.deafult) {\n      this.setState({\n        ...this.state,\n        weather: {\n          ...this.state.weather,\n          temperature: this.state.isFah ? celcius : fahrenheit,\n        },\n        isFah: !this.state.isFah,\n      });\n\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      weather: {\n        ...this.state.weather,\n        main: {\n          ...this.state.weather.main,\n          temp: this.state.isFah ? celcius : fahrenheit,\n        },\n      },\n      isFah: !this.state.isFah,\n    });\n  };\n\n  //update the value of the the input field with state\n  changeRegion = (value) => {\n    this.setState({ ...this.state, regionInput: value });\n  };\n\n  //update the weather depending upon the value user entered\n  changeLocation = (e) => {\n    e.preventDefault();\n\n    Axios.get(\n      `http://api.weatherstack.com/current?access_key=ee2c00a09ba65e4467143d28625d3fa2&query=${this.state.regionInput}`\n    ).then((res) => {\n      let userWeather = {\n        temperature: res.data.current.temperature,\n        description: res.data.current.weather_descriptions[0],\n        location: res.data.location.name,\n        region: res.data.location.region,\n        country: res.data.location.country,\n        wind_speed: res.data.current.wind_speed,\n        pressure: res.data.current.pressure,\n        precip: res.data.current.precip,\n        humidity: res.data.current.humidity,\n        img: res.data.current.weather_icons,\n      };\n\n      this.setState({\n        ...this.state,\n        weather: userWeather,\n        deafult: false,\n        isFah: false,\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Navbar\n            changeRegion={this.changeRegion}\n            changeLocation={this.changeLocation}\n          />\n          {this.state.weather ? (\n            <UserLocation\n              deafult={this.state.deafult}\n              weather={this.state.weather}\n              isFah={this.state.isFah}\n            />\n          ) : (\n            <p>loading loadinggg</p>\n          )}\n          <div className=\"d-flex justify-content-center my-5\">\n            <Button variant=\"info\" onClick={(e) => this.convertTemp()}>\n              Switch to {this.state.isFah ? \"Celcius\" : \"Fahrenheit\"}\n            </Button>\n            <Button variant=\"primary mx-3\">\n              <Link to=\"/pollution\" style={{ color: \"white\" }}>\n                Get air pollution info\n              </Link>\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* Default\nfunction defaults() {\n  useEffect (()=> {\n\nasync function showPosition(position){\n  try {\n\n    const latitude =  position.coords.latitude \n    const longitude = position.coords.longitude\n\n    console.log(latitude,longitude)\n\n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${api.key}`)\n      res.data.main.temp -= 273\n\n      setWeather(res.data);\n      console.log(res)\n  } catch (error) {\n      console.log(error)\n  }\n}\n    function getLocation() {\n      if (navigator.geolocation) {\n        console.log(navigator.geolocation.getCurrentPosition(showPosition));\n      } else {\n         alert('Error')\n      }\n    }\n\n    getLocation()\n  }, [])\n}*/\n\nexport default App;\n","import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst Pollution = (props) => {\n  const [pollutionData, setPollutionData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const setAqiColor = (aqi) => {\n    console.log(aqi);\n    let color = \"#14ea14\";\n    switch (true) {\n      case aqi > 7 && aqi <= 10:\n        color = \"#14ea14\";\n\n        break;\n      case aqi >= 4 && aqi <= 7:\n        color = \"#ead014\";\n        break;\n      case aqi >= 0:\n        color = \"#ea6314\";\n        break;\n      default:\n        break;\n    }\n\n    return color;\n  };\n\n  const loadPollutionData = async (position) => {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n\n    setLoading(true);\n    //console.log(latitude, longitude);\n    try {\n      const weatherRes = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=b9dfff4772ea4035c45e4bbc1da13479`\n      );\n      const res = await axios.get(\n        `http://api.openweathermap.org/data/2.5/air_pollution?lat=${latitude}&lon=${longitude}&appid=b9dfff4772ea4035c45e4bbc1da13479`\n      );\n\n      console.log(res.data);\n      console.log(weatherRes.data);\n      setPollutionData({\n        name: weatherRes.data.name,\n        country: weatherRes.data.sys.country,\n        aqi: res.data.list[0].main.aqi,\n        pm2_5: res.data.list[0].components.pm2_5,\n        pm10: res.data.list[0].components.pm10,\n        aqiColor: setAqiColor(res.data.list[0].main.aqi),\n      });\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(loadPollutionData);\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const weatherRes = await axios.get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${location}&appid=b9dfff4772ea4035c45e4bbc1da13479`\n      );\n\n      const { lat, lon } = weatherRes.data.coord;\n      const res = await axios.get(\n        `http://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=b9dfff4772ea4035c45e4bbc1da13479`\n      );\n\n      setPollutionData({\n        name: weatherRes.data.name,\n        country: weatherRes.data.sys.country,\n        aqi: res.data.list[0].main.aqi,\n        pm2_5: res.data.list[0].components.pm2_5,\n        pm10: res.data.list[0].components.pm10,\n        aqiColor: setAqiColor(res.data.list[0].main.aqi),\n      });\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ height: \"100vh\" }}>\n      {!loading && pollutionData ? (\n        <div className=\"container\" style={{ height: \"100%\" }}>\n          <div className=\"row\">\n            <div className=\"col\" style={{ paddingTop: \"50px\" }}>\n              <form\n                class=\"region\"\n                style={{ textAlign: \"center\" }}\n                onSubmit={(e) => handleSubmit(e)}\n              >\n                <input\n                  type=\"text\"\n                  class=\"regioninput\"\n                  placeholder=\"Select your region\"\n                  onChange={(e) => setLocation(e.target.value)}\n                />\n              </form>\n              <h3 className=\"text-center display-4\">\n                {pollutionData.name} , {pollutionData.country}\n              </h3>\n              <div className=\"pollution mt-5\">\n                <div className=\"pollutionInner\">\n                  <div\n                    className=\"aqi\"\n                    style={{ background: pollutionData.aqiColor }}\n                  >\n                    <h4 className=\"text-center \">Air quality Index</h4>\n                    <h2 className=\"aqiIndex\">{pollutionData.aqi * 10}</h2>\n                  </div>\n                  <div className=\"pmCont\">\n                    <p>PM 2.5:</p>\n                    <h4> {pollutionData.pm2_5}</h4>\n                    <p>PM 10:</p>\n                    <h4> {pollutionData.pm10}</h4>\n                  </div>\n                </div>\n              </div>\n              <div className=\"btnCont\">\n                <Button variant=\"info\">\n                  <Link to=\"/\" style={{ color: \"white\" }}>\n                    Go back to home\n                  </Link>\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h1 className=\"text-center\">Loading...</h1>\n      )}\n    </div>\n  );\n};\n\nPollution.propTypes = {};\n\nexport default Pollution;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport Pollution from \"./components/Pollution\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/pollution\" component={Pollution} />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}